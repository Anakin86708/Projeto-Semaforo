package GUI;

import GUI.Draw.SemaphorePanel;
import java.util.HashMap;
import java.util.Timer;
import network.ClientRepresentation;
import server.ServerSemaphore;

/**
 *
 * @author Leo
 */
public class GUIServer extends javax.swing.JFrame {

    private final ServerSemaphore semaphoreController;
    public final static int PERIOD = 5000;
    private final HashMap<ClientRepresentation, SemaphorePanel> visualSemaphoresMap;

    /**
     * Creates new form GUIServer
     */
    public GUIServer() {
        initComponents();
        this.semaphoreController = new ServerSemaphore(this);
        this.visualSemaphoresMap = new HashMap<>();
        initializeLog();
    }

    /**
     * Initial text for server log
     */
    private void initializeLog() {
        Timer timer = new Timer();
        semaphoreController.initializeLog();
        timer.scheduleAtFixedRate(semaphoreController, 0, PERIOD);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        footer = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tabs = new javax.swing.JTabbedPane();
        log = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        logArea = new javax.swing.JTextArea();
        visualPanel = new javax.swing.JPanel();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        optionExit = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        optionHelp = new javax.swing.JMenuItem();
        optionAbout = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                GUIServer.this.windowClosing(evt);
            }
        });

        footer.setBackground(new java.awt.Color(0, 0, 0));

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Semaphore server");

        javax.swing.GroupLayout footerLayout = new javax.swing.GroupLayout(footer);
        footer.setLayout(footerLayout);
        footerLayout.setHorizontalGroup(
            footerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(footerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        footerLayout.setVerticalGroup(
            footerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
        );

        tabs.setTabPlacement(javax.swing.JTabbedPane.LEFT);

        log.setBackground(new java.awt.Color(255, 255, 0));

        logArea.setEditable(false);
        logArea.setColumns(20);
        logArea.setRows(5);
        jScrollPane1.setViewportView(logArea);

        javax.swing.GroupLayout logLayout = new javax.swing.GroupLayout(log);
        log.setLayout(logLayout);
        logLayout.setHorizontalGroup(
            logLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 565, Short.MAX_VALUE)
                .addContainerGap())
        );
        logLayout.setVerticalGroup(
            logLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        tabs.addTab("Log view", log);

        visualPanel.setLayout(new java.awt.GridLayout());
        tabs.addTab("Visual", visualPanel);

        fileMenu.setText("File");

        optionExit.setText("Exit");
        optionExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exit(evt);
            }
        });
        fileMenu.add(optionExit);

        menuBar.add(fileMenu);

        helpMenu.setText("Help");

        optionHelp.setText("Help");
        optionHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showHelp(evt);
            }
        });
        helpMenu.add(optionHelp);

        optionAbout.setText("About");
        optionAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showAbout(evt);
            }
        });
        helpMenu.add(optionAbout);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(footer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(tabs, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 649, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tabs, javax.swing.GroupLayout.DEFAULT_SIZE, 328, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(footer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void showHelp(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showHelp
        DialogMessages dialog = new DialogMessages(this, true, "Help");
        dialog.setLocationRelativeTo(this);
        dialog.setVisible(true);
    }//GEN-LAST:event_showHelp

    private void showAbout(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showAbout
        DialogMessages dialog = new DialogMessages(this, true, "About");
        dialog.setLocationRelativeTo(this);
        dialog.setVisible(true);
    }//GEN-LAST:event_showAbout

    private void exit(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exit
        closeAllClients();
        stopThreadsAndExit();
    }//GEN-LAST:event_exit

    private void windowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_windowClosing
        closeAllClients();
        stopThreadsAndExit();
    }//GEN-LAST:event_windowClosing

    private void closeAllClients() {
        this.semaphoreController.closeAllClients();
    }

    private void stopThreadsAndExit() {
        this.semaphoreController.stopThread();
        System.exit(0);
    }

    public void writeOnLog(StringBuilder sb) {
        logArea.append(sb.toString());
        logArea.setCaretPosition(logArea.getDocument().getLength());
    }

    public void displayNewClientView(ClientRepresentation clientRepresentation) {
        SemaphorePanel panel = new SemaphorePanel();
        this.visualSemaphoresMap.put(clientRepresentation, panel);
        this.visualPanel.add(panel);
    }

    public void removeClientView(ClientRepresentation clientRepresentation) {
        SemaphorePanel panel = this.visualSemaphoresMap.get(clientRepresentation);
        this.visualPanel.remove(panel);
        this.visualSemaphoresMap.remove(clientRepresentation);
    }

    public void changeAllClientView() {
        try {
            this.visualSemaphoresMap.forEach((client, panel) -> {
                panel.changeState(semaphoreController.getClientStage(client));
            });
        } catch (NullPointerException e) {
            System.err.println("Null\n");
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu fileMenu;
    private javax.swing.JPanel footer;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel log;
    private javax.swing.JTextArea logArea;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem optionAbout;
    private javax.swing.JMenuItem optionExit;
    private javax.swing.JMenuItem optionHelp;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JPanel visualPanel;
    // End of variables declaration//GEN-END:variables
}
